@model ElDiary.ViewModels.ContactsViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <title>@ViewBag.Title ElDIary</title>
    <meta name="viewport" content="width=device-width"/>
</head>
<body>
<div style="margin-top:20px">
    <table id="contacts" class="display">
        <thead>
        <tr>
            <th>Фамилия</th>
            <th>Имя</th>
            <th>Отчество</th>
            <th>Дата рождения</th>
            <th>Организация</th>
            <th>Должность</th>
            <th>Телефон</th>
            <th>Email</th>
            <th>Skype</th>
            <th>Другое</th>
            <th class="hidden">Id</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Contacts)
        {
            <tr>
                <td id="secondName" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.SecondName)</td>
                <td id="firstName" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.FirstName)</td>
                <td id="thirdName" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.ThirdName)</td>
                <td id="birthDate" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.BirthDate)</td>
                <td id="company" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.Company)</td>
                <td id="position" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.Position)</td>
                <td id="phone" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.Phone)</td>
                <td id="email" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.Email)</td>
                <td id="skype" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.Skype)</td>
                <td id="other" contenteditable="true" onblur="editContact(this)">@Html.DisplayFor(x => item.Other)</td>
                <td >
                    <input type="button" class=" delete btn btn-default" onclick="deleteContact(this)" value="Удалить контакт"/>
                    <div id="contactId" class="hidden">
                        @Html.DisplayFor(x => item.Id)
                    </div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div>
        <input type="button" class="edit btn btn-default" onclick="saveChanges()" value="Сохранить изменения"/>
    </div>
</div>
</body>
</html>

<script type="text/javascript">
    let contactsMap = new Map();
    
    function editContact(textBox){
        let currentContact = $(textBox).parent();
        let contactId = getFieldTextByElementId(currentContact, "contactId");
        let secondName = getFieldTextByElementId(currentContact, "secondName");
        let firstName = getFieldTextByElementId(currentContact, "firstName");
        let thirdName = getFieldTextByElementId(currentContact, "thirdName");
        let birthDate = getFieldTextByElementId(currentContact, "birthDate");
        let company = getFieldTextByElementId(currentContact, "company");
        let position = getFieldTextByElementId(currentContact, "position");
        let phone = getFieldTextByElementId(currentContact, "phone");
        let email = getFieldTextByElementId(currentContact, "email");
        let skype = getFieldTextByElementId(currentContact, "skype");
        let other = getFieldTextByElementId(currentContact, "other");
        
        contactsMap.set(contactId, {id:contactId, secondName, firstName, thirdName, birthDate, company, position, phone, email, skype, other});
    }
    
    function saveChanges() {
      let editedContactsJson = JSON.stringify(Array.from(contactsMap.values()));
              
      $.ajax({
          type: "POST",
          url: "../contacts/editcontact",
          contentType: 'application/json',
          data: JSON.stringify({ editedContactsJson: editedContactsJson })
      });
    }
    
    function deleteContact(inputTypeButton){
        let currentContact = $(inputTypeButton).parent().parent();
        let contactId = getFieldTextByElementId(currentContact, "contactId");
        
        contactsMap.delete(contactId);
        $.ajax({
            type: "POST",
            url: "../contacts/deletecontact",
            contentType: 'application/json',
            data: JSON.stringify({ contactId: contactId })
        });
        
        $(currentContact).remove();
    }
    
    function getFieldTextByElementId(currentContact, id) {
      return currentContact.find(`#${id}`).text().trim();
    }
    
    $(function() {
        $("#contacts").dataTable({
            language: {
                "processing": "Подождите...",
                "search": "Поиск:",
                "lengthMenu": "Показать _MENU_ записей",
                "info": "Записи с _START_ до _END_ из _TOTAL_ записей",
                "infoEmpty": "Записи с 0 до 0 из 0 записей",
                "infoFiltered": "(отфильтровано из _MAX_ записей)",
                "infoPostFix": "",
                "loadingRecords": "Загрузка записей...",
                "zeroRecords": "Записи отсутствуют.",
                "emptyTable": "В таблице отсутствуют данные",
                "paginate": {
                    "first": "Первая",
                    "previous": "Предыдущая",
                    "next": "Следующая",
                    "last": "Последняя"
                },
                "aria": {
                    "sortAscending": ": активировать для сортировки столбца по возрастанию",
                    "sortDescending": ": активировать для сортировки столбца по убыванию"
                }
            }
        });
    });
</script>